apiVersion: v1
kind: ReplicationController
metadata:
  name: kube-dns-v10
  namespace: kube-system
  labels:
    k8s-app: kube-dns
    version: v10
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    k8s-app: kube-dns
    version: v10
  template:
    metadata:
      labels:
        k8s-app: kube-dns
        version: v10
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - name: kube2sky
        image: sigmas/kube2sky:1.11
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
        args:
        - -domain=sigma.local
        - -etcd-server=http://61.160.36.122:4001
        - -kubecfg_file=/var/lib/kubelet/kubeconfig
        - -kube_master_url=https://61.160.36.122
        volumeMounts:
        - name: config
          readOnly: true
          mountPath: /var/lib/kubelet/kubeconfig
      - name: skydns
        image: sigmas/skydns:1.0
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
        args:
        - -machines=http://61.160.36.122:4001
        - -addr=0.0.0.0:53
        - -domain=sigma.local
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 5
      - name: healthz
        image: sigmas/exechealthz:1.0
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
        args:
        - -cmd=nslookup kubernetes.default.svc.sigma.local localhost >/dev/null
        - -port=8080
        ports:
        - containerPort: 8080
          protocol: TCP
      volumes:
      - name: config
        hostPath:
          path: /var/lib/kubelet/kubeconfig
      dnsPolicy: Default  # Don't use cluster DNS.
      nodeSelector:
        master: "true"

---

apiVersion: v1
kind: Service
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "KubeDNS"
spec:
  selector:
    k8s-app: kube-dns
  clusterIP: 192.168.0.2
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
